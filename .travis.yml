sudo: false                 # Use new container infrastructure to enable caching
language: c                 # Choose a lightweight base image; we provide our own build tools.
cache:                      # Caching so the next build will be fast too.
  directories:
    - $HOME/.ghc
    - $HOME/.cabal
    - $HOME/.stack

matrix:
  include:
    - env: BUILD=stack ARGS="--resolver lts-7"
      compiler: "Stack LTS-7"

    - env: BUILD=stack ARGS="--resolver lts-7"
      compiler: "Stack LTS-7 OSX"
      os: osx

before_install:
  - unset CC                # Using compiler above sets CC to an invalid value, so unset it
  - CABALARGS=""            # We want to always allow newer versions of packages when building on GHC HEAD
  - mkdir -p ~/.local/bin   # For locally installed binaries from stack
  - export PATH=$HOME/.local/bin:$HOME/.cabal/bin:$PATH
  - |
    if [ `uname` = "Darwin" ]; then
      travis_retry curl --insecure -L https://www.stackage.org/stack/osx-x86_64 | tar xz --strip-components=1 --include '*/stack' -C ~/.local/bin
    else
      travis_retry curl -L https://www.stackage.org/stack/linux-x86_64 | tar xz --wildcards --strip-components=1 -C ~/.local/bin '*/stack'
    fi

    # Use the more reliable S3 mirror of Hackage
    mkdir -p ~/.cabal
    echo 'remote-repo: hackage.haskell.org:http://hackage.fpcomplete.com/' > $HOME/.cabal/config
    echo 'remote-repo-cache: $HOME/.cabal/packages' >> $HOME/.cabal/config

    if [ "$CABALVER" != "1.16" ]; then
      echo 'jobs: $ncpus' >> $HOME/.cabal/config
    fi

  # Get the list of packages from the stack.yaml file
  - PACKAGES=$(stack --install-ghc query locals | grep '^ *path' | sed 's@^ *path:@@')

install:
  - if [ -f configure.ac ]; then autoreconf -i; fi
  - |
    set -ex
    stack --no-terminal --install-ghc $ARGS test --bench --only-dependencies
    set +ex

script:
  - |
    set -ex
    stack --no-terminal $ARGS test --bench --no-run-benchmarks --haddock --no-haddock-deps
    set +ex
